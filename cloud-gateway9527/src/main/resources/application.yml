server:
  port: 9527

spring:
  application:
    name: cloud-gateway #以微服务注册进consul或nacos服务列表内
  cloud:
    consul: #配置consul地址
      host: localhost
      port: 8500
      discovery:
        prefer-ip-address: true
        service-name: ${spring.application.name}
    gateway: # 网关
      routes: # 路由
        - id: pay_routh1 #pay_routh1                #路由的ID(类似mysql主键ID)，没有固定规则但要求唯一，建议配合服务名
#          uri: http://localhost:8001                #匹配后提供服务的路由地址 映射写死，端口变更死翘翘
          uri: lb://cloud-payment-service          #匹配后提供服务的路由地址  lb(负载均衡) 以微服务名动态获取服务URI
          predicates: # 断言&
            - Path=/pay/gateway/get/** # 断言，路径相匹配的进行路由
            - After=2024-08-22T14:20:57.333524+08:00[Asia/Shanghai] # 此谓词匹配在指定日期时间之后发生的请求。  ZonedDateTime zbj = ZonedDateTime.now(); //获得默认时区
#            - Before=2024-08-24T14:59:57.333524+08:00[Asia/Shanghai] # 此谓词匹配在指定日期时间之前发生的请求。  ZonedDateTime zbj = ZonedDateTime.now(); //获得默认时区
#            - Between=2024-08-22T14:20:57.333524+08:00[Asia/Shanghai], 2024-08-22T14:29:11.810761500+08:00[Asia/Shanghai] # 此路线与此时间段之间提出的任何请求匹配。 这对于维护时段可能很有用。
#            - Cookie=username, xi # 此路由与请求的Cookie name值和该正则表达式相同的请求相匹配
#            - Header=X-Request-Id, \d+ # 两个参数：一个是请求头的属性名称和一个正则表达式，这个属性值和正则表达式匹配则执行。  请求头要有X-Request-Id属性并且值为整数的正则表达式
#            - Host=**.xi.com,**.anotherhost.netHost # 接收一组参数，一组匹配的域名列表，这个模板是一个 ant 分隔的模板，用.号作为分隔符。它通过参数中的主机地址作为匹配规则*
#            - Query=username, \d+  # 要有路径参数 参数名username并且值还要是整数才能路由 eg: 路径+?username=1
#            - RemoteAddr=192.168.1.1/24 # 外部访问我的IP限制，最大跨度不超过32，目前是1~24它们是 CIDR 表示法。
#            - Method=GET,POST # 配置某个请求地址，只能用Get/Post方法访问，方法限制
            - My=diamond # 自定义断言 diamond钻石用户可以访问 必须重写短促的方法
#            - name: My # 自定义断言 diamond钻石用户可以访问
#              args:
#                userType: diamond

        - id: pay_routh2 #pay_routh2                #路由的ID(类似mysql主键ID)，没有固定规则但要求唯一，建议配合服务名
#          uri: http://localhost:8001                #匹配后提供服务的路由地址  映射写死，端口变更死翘翘
          uri: lb://cloud-payment-service                #匹配后提供服务的路由地址  lb(负载均衡) 以微服务名动态获取服务URI
          predicates: # 断言&
            - Path=/pay/gateway/info/**              # 断言，路径相匹配的进行路由

        - id: pay_routh3 #pay_routh3
          uri: lb://cloud-payment-service                #匹配后提供服务的路由地址
          predicates:
            - Path=/pay/gateway/filter/**              # 断言，路径相匹配的进行路由
#            - Path=/gateway/filter/**              # 断言，为配合- PrefixPath测试PrefixPath过滤器，暂时注释掉/pay
#            - Path=/XYZ/abc/{segment}             # 断言，为配合- SetPath测试测试SetPath过滤器，{segment}的内容最后被SetPath的{segment}取代

          filters: # 过滤器
#            # 请求头(RequestHeader)相关组
#            - AddRequestHeader=X-Request-xi1,xiValue1  # 添加请求头kv，若一头含有多参则重写一行设置
#            - AddRequestHeader=X-Request-xi2,xiValue2  # 同上
#            - RemoveRequestHeader=sec-fetch-site      # 删除请求头sec-fetch-site
#            - SetRequestHeader=sec-fetch-mode, Blue-updatebyxi # 将请求头sec-fetch-mode对应的值修改为Blue-updatebyxi
#
#            # 请求参数(RequestParameter)相关组
#            - AddRequestParameter=customerId,9527001 # 新增请求参数Parameter：k ，v
#            - RemoveRequestParameter=customerName   # 删除url请求参数customerName，你传递过来也是null
#
#            # 回应头(ResponseHeader)相关组
#            - AddResponseHeader=X-Response-xi, BlueResponse # 新增请求参数X-Response-xi并设值为BlueResponse
#            - SetResponseHeader=Date,2099-11-11 # 设置回应头Date值为2099-11-11
#            - RemoveResponseHeader=Content-Type # 将默认自带Content-Type回应属性删除

            # 前缀和路径相关组
#            - PrefixPath=/pay # 添加路径前缀 被分析为: PrefixPath + Path 访问http://localhost:9527/gateway/filter被解析为http://localhost:9527/pay/gateway/filter
#            - SetPath=/pay/gateway/{segment}  # 访问路径修改 带占位符的地址替换 {segment}表示占位符，你写abc也行但要上下一致 访问http://localhost:9527/XYZ/abc/filter被解析为http://localhost:9527/pay/gateway/filter
#            - RedirectTo=302, http://www.atguigu.com/ # 重定向 访问http://localhost:9527/pay/gateway/filter如果报302的错就会跳转到http://www.atguigu.com/
            - My=xi # 自定义条件过滤器 queryParam路径参数需包含xi属性放行，否则BAD_REQUEST400

#      default-filters: # 添加过滤器应用到所有路由
#        - AddResponseHeader=X-Response-Default-Red, Default-Blue
#        - SetResponseHeader=Date,2099-11-11


